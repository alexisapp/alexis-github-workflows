name: Tests

on:
  workflow_call:
     inputs:
        runs-on:
          required: false
          description: "runs-on self-hosted or ubuntu-latest"
          default: 'ubuntu-latest'
          type: string
        mongodb_url:
          required: false
          description: "MONGODB_URI"
          default: 'mongodb://localhost:27017/test_'
          type: string
        id_url:
          required: false
          description: "ID_URL"
          default: 'https://api.alexishr.com/.well-known/jwks.json'
          type: string
        get_actions_user_id:
          required: false
          description: "Get Actions user id"
          default: 'false'
          type: string
        correct_wwnership:
          required: false
          description: "Correct Ownership in GITHUB_WORKSPACE directory"
          default: 'false'
          type: string 
        node_version:
          required: false
          description: "node version"
          default: '16'
          type: string
        set_npm:
          required: false
          description: "Set npm 8.5.5"
          default: 'true'
          type: string
        unset_prepare:
          required: false
          description: "Unset prepare"
          default: 'false'
          type: string 
        publish_code_coverage:
          required: false
          description: "Run tests & publish code coverage"
          default: 'true'
          type: string
        coverage_files:
          required: false
          description: "path to coverage_files"
          default: './coverage/lcov.info'
          type: string 
        coverageLocations:
          required: false
          description: "coverage Locations"
          default: './coverage/lcov.info:lcov'
          type: string
        cache:
          required: false
          description: "actions/cache@v2"
          default: 'false'
          type: string
        dockercompose:
          required: false
          description: "use docker-compose"
          default: 'false'
          type: string
        mongodb:
          required: false
          description: "use mongodb"
          default: 'false'
          type: string        
        upload_code_coverage:
          required: false
          description: "Upload code coverage"
          default: 'false'
          type: string
        port:
          required: false
          description: "PORT"
          default: '3047'
          type: string
        api_url:
          required: false
          description: "API_URL"
          default: 'http://localhost:3000'
          type: string                    



jobs:
  tests:
    runs-on: ${{ inputs.runs-on }} 
    env:
      COMPOSE_FILE: ./docker-compose.yml
      NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
      MONGODB_URI: ${{ inputs.mongodb_url }} 
      ID_URL: ${{ inputs.id_url }}

    steps: 
      - name: Get Actions user id 
        if: ${{ inputs.get_actions_user_id }}  == 'true'
        id: get_uid
        run: |
          actions_user_id=`id -u $USER`
          echo $actions_user_id
          echo ::set-output name=uid::$actions_user_id          

      - name: Correct Ownership in GITHUB_WORKSPACE directory
        if: ${{ inputs.correct_wwnership }}  == 'true'
        uses: peter-murray/reset-workspace-ownership-action@v1
        with:
          user_id: ${{ steps.get_uid.outputs.uid }}

      - uses: actions/checkout@v2

      - uses: actions/setup-node@v2
        with:
          node-version: ${{ inputs.node_version }}

      - uses: actions/cache@v2
        if: ${{ inputs.cache }}  == 'true'      
        with:
          path: |
            **/node_modules
            **/.eslintcache
            ~/.npm
          key: ${{ runner.os }}-npm-${{ hashFiles('**/package-lock.json') }}
          restore-keys: |
            ${{ runner.os }}-npm-          

      - name: Build Dockerfile
        if: ${{ inputs.dockercompose }}  == 'true' 
        run: docker-compose up -d app

      - name: Set npm 8.5.5
        if: ${{ inputs.set_npm }}  == 'true'      
        run: npm i -g npm@8.5.5        

      - name: Unset prepare
        run: npm pkg delete scripts.prepare

      - name: Install
        run: npm ci

      - name: Build
        run: npm run build

      - name: Start MongoDB
        if: ${{ inputs.mongodb }}  == 'true'
        uses: supercharge/mongodb-github-action@1.7.0
        with:
          mongodb-version: "4.4"

      - name: Wait for Mongo
        if: ${{ inputs.mongodb }}  == 'true'
        run: wget -qO- https://raw.githubusercontent.com/eficode/wait-for/$WAIT_FOR_VERSION/wait-for | sh -s -- -t 120 localhost:27017 -- echo "Mongo ready."
        env:
          WAIT_FOR_VERSION: 4df3f9262d84cab0039c07bf861045fbb3c20ab7 # v2.2.3        

      - name: Check docker
        if: ${{ inputs.dockercompose }}  == 'true' 
        run: docker-compose up -d app

      - name: Run lint
        run: npm run lint

      - name: Run tests
        run: npm run test

      - name: Run tests & publish code coverage
        if: ${{ inputs.publish_code_coverage }}  == 'true'
        uses: paambaati/codeclimate-action@v3.0.0
        env:
          CC_TEST_REPORTER_ID: ${{ secrets.CC_TEST_REPORTER_ID }}
        with:
          coverageCommand: npm run test:cov
          debug: true
          coverageLocations: |
            ${{github.workspace}}${{ inputs.coverageLocations }}

      - name: Upload code coverage to codecov
        if: ${{ inputs.upload_code_coverage }}  == 'true'
        uses: codecov/codecov-action@v2
        with:
          directory: ./coverage/
          files: ${{ inputs.coverage_files }}
          token: ${{ secrets.CODECOV_TOKEN }}
          verbose: true

      - uses: act10ns/slack@v2
        with:
          status: ${{ job.status }}
          config: .github/config/slack.yaml
        if: failure()             