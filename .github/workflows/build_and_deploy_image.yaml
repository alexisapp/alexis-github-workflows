name: Build and Deploy to GKE (Develop)

# on:
#   push:
#     branches:
#       - develop
on:
  workflow_call:
      inputs:
        migrations:
          required: false
          description: "migrations"
          default: 'false'

env:
  NPM_AUTH_TOKEN: ${{ secrets.NPM_AUTH_TOKEN }}
  SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}
  ORGANIZATION: alexisapp
  DEV_CLUSTER: dev-cluster-200fb4f
  TEST_CLUSTER: test-cluster-3ffdd90
  DEV_PROJECT: alexishr-dev-293211
  TEST_PROJECT: alexishr-test-300014
  PROD_CLUSTER: app-cluster-8b520e4
  PROD_PROJECT: alexishr-infra
  SANDBOX_CLUSTER: sandbox-cluster-bc4e85d
  SANDBOX_PROJECT: alexishr-sandbox
  STAGING_CLUSTER: staging-cluster-80833fd
  STAGING_PROJECT: alexishr-staging-296019


jobs:
  setup-build-publish-deploy:
    runs-on: ubuntu-latest
    environment: develop
    steps:
    - uses: act10ns/slack@v1
      with:
        status: starting
        config: .github/config/slack.yaml
      if: always()

    - name: Checkout
      uses: actions/checkout@v3
    
    # It could be hardcoded in ENV
    - name: Set Variables
      run: |-
         echo "IMAGE=$( echo $GITHUB_REPOSITORY | cut -d '/' -f 2  | sed 's/alexis-//g' )" >> $GITHUB_ENV   
         echo "DEPLOYMENT=$( echo $GITHUB_REPOSITORY | cut -d '/' -f 2  | sed 's/alexis-//g' )" >> $GITHUB_ENV
         echo ${{ inputs.migrations }}

         # IMAGE_TAG

    # - name: Setup gcloud CLI Dev
    #   uses: google-github-actions/setup-gcloud@94337306dda8180d967a56932ceb4ddcf01edae7
    #   with:
    #     service_account_key: ${{ secrets.GOOGLE_DOCKER_IMAGE_SA_KEY }} #${{ secrets.GKE_SA }}
    #     project_id: alexishr-images

    # # Configure Docker to use the gcloud command-line tool as a credential
    # - run: |-
    #     gcloud --quiet auth configure-docker

    # # # Build the Docker image
    # - name: Build 
    #   run: |-
    #     docker build \
    #       -f prod.Dockerfile \
    #       --tag "eu.gcr.io/alexishr-images/$IMAGE:$GITHUB_SHA" \
    #       --build-arg NPM_AUTH_TOKEN="$NPM_AUTH_TOKEN" \
    #       --build-arg SENTRY_RELEASE="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_SHA" \
    #       --build-arg GITHUB_REF="$GITHUB_REF" \
    #       .
    #   env:
    #     DOCKER_BUILDKIT: 1       

    # - name: Publish branch (GCR)
    #   run: |
    #     IMAGE_ID=eu.gcr.io/alexishr-images/$IMAGE
        
    #     # Change all uppercase to lowercase
    #     IMAGE_ID=$(echo $IMAGE_ID | tr '[A-Z]' '[a-z]')
    #     echo IMAGE_ID=$IMAGE_ID
    #     docker tag "eu.gcr.io/alexishr-images/$IMAGE:$GITHUB_SHA" $IMAGE_ID:develop
    #     docker push $IMAGE_ID:$GITHUB_SHA
    #     docker push $IMAGE_ID:develop

    # - name: Notify Humanitec
    #   run: |
    #     curl \
    #     -X POST \
    #     -H "Authorization: Bearer ${{ secrets.HUMANITEC_TOKEN }}" \
    #     -d '{"branch":"'"${GITHUB_REF#refs/heads/}"'","commit":"'"${GITHUB_SHA}"'","image":"'"eu.gcr.io/alexishr-images/${IMAGE}:${GITHUB_SHA}"'"}' \
    #     "https://api.humanitec.io/orgs/alexishr/images/$IMAGE/builds"        

    #  # Deploy the Docker image to the GKE cluster
    #  # .spec.progressDeadlineSeconds to a value such as 30 (default is 600 or ten minutes) and kubectl rollout status deployment will wait for this amount of time before displaying an error message and exiting with a non zero exit code
    # - name: Get the GKE credentials so we can deploy to the cluster
    #   uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
    #   with:
    #     cluster_name: ${{ env.DEV_CLUSTER }}
    #     location: "europe-west1"
    #     credentials:  ${{ secrets.GOOGLE_DOCKER_IMAGE_SA_KEY }}
    #     project_id: ${{ env.DEV_PROJECT }}
    # - name: Deploy Dev
    #   run: |-
    #     kubectl -n dev set image deployment/$DEPLOYMENT-server-deployment $IMAGE="eu.gcr.io/alexishr-images/$IMAGE:$GITHUB_SHA"
    #     kubectl -n dev rollout status deployment/$DEPLOYMENT-server-deployment
    #     kubectl -n dev get services -o wide

    # - name: Get the GKE credentials so we can deploy to the cluster
    #   uses: google-github-actions/get-gke-credentials@fb08709ba27618c31c09e014e1d8364b02e5042e
    #   with:
    #     cluster_name: ${{ env.TEST_CLUSTER }}
    #     location: "europe-west1"
    #     credentials:  ${{ secrets.GOOGLE_DOCKER_IMAGE_SA_KEY }}
    #     project_id: ${{ env.TEST_PROJECT }}
    #     migrations:
    #     workers:
    #     cronjobs:
    # - name: Deploy Test
    #   run: |-
    #     kubectl -n test get po
    #     kubectl -n test set image deployment/$DEPLOYMENT-server-deployment $IMAGE="eu.gcr.io/alexishr-images/$IMAGE:$GITHUB_SHA"
    #     kubectl -n test rollout status deployment/$DEPLOYMENT-server-deployment
    #     kubectl -n test get services -o wide        
            
    # - uses: act10ns/slack@v1
    #   with:
    #     status: ${{ job.status }}
    #     config: .github/config/slack.yaml
    #   if: always()